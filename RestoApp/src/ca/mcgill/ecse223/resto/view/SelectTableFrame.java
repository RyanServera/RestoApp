package ca.mcgill.ecse223.resto.view;

import java.util.HashMap;

import ca.mcgill.ecse223.resto.controller.Controller;
import ca.mcgill.ecse223.resto.model.Table;

public class SelectTableFrame extends javax.swing.JFrame {

    /**
     * Creates new form SelectTableFrame
     */
    public SelectTableFrame(String s) {
        initComponents();
        refreshData();
        setUtility(s);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        selectTableLabel = new javax.swing.JLabel();
        comboBoxTable = new javax.swing.JComboBox<>();
        selectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        selectTableLabel.setText("Select Table");

        comboBoxTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectButton.setText("select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(selectTableLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(selectButton))
                            .addComponent(comboBoxTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectTableLabel)
                .addGap(18, 18, 18)
                .addComponent(comboBoxTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setVisible(true);
    }// </editor-fold>                        

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int index = comboBoxTable.getSelectedIndex();
        System.out.println("index of selected item is : "+index);
        Table theTable = tables.get(index);
        if(utility.equals("editTable")){
        	this.setVisible(false);
        	TableSettingsMenu settingsMenu = new TableSettingsMenu(theTable);
        	this.dispose();
        }else if(utility.equals("moveTable")){
        	this.setVisible(false);
        	MoveTableUI moveTableFrame = new MoveTableUI(theTable);
        	this.dispose();
        }
    }                                            
    
    public void refreshData() {
    	tables = new HashMap<Integer, Table>();
		comboBoxTable.removeAllItems();
		Integer index = 0;
		for(Table t : Controller.listAllTables()) {
			tables.put(index, t);
			comboBoxTable.addItem("Table # " + t.getNumber());
			index++;
		}
		 
	 }
    
    private void setUtility(String s){
    	utility = s;
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> comboBoxTable;
    private javax.swing.JButton selectButton;
    private javax.swing.JLabel selectTableLabel;
    private HashMap<Integer, Table> tables;
    private String utility = null;
    // End of variables declaration                   
}
